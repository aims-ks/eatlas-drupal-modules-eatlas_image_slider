<?php

/**
 * Implements: hook_menu().
 *
 * Module configuration
 *   https://api.drupal.org/api/drupal/modules%21system%21system.api.php/function/hook_menu/7
 */
function eatlas_image_slider_menu() {
	$items = array();

	// Overview
	// List all image slider blocks
	$items['admin/config/eatlas/eatlas_image_slider'] = array(
		'title' => 'Image sliders settings',
		'description' => 'eAtlas image slider module settings',
		'page callback' => '_eatlas_image_slider_overview',
		'access arguments' => array('access administration pages'),
		'file' => 'eatlas_image_slider.admin.inc'
	);

	// Create a new image slider block
	$items['admin/config/eatlas/eatlas_image_slider/create'] = array(
		'title callback' => '_eatlas_image_slider_title',
		'title arguments' => array(NULL, 4),
		'description' => 'Create a new image slider block',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_eatlas_image_slider_create'),
		'access arguments' => array('access administration pages'),
		'file' => 'eatlas_image_slider.admin.inc'
	);

	// Edit an image slider block
	$items['admin/config/eatlas/eatlas_image_slider/%/edit'] = array(
		'title callback' => '_eatlas_image_slider_title',
		'title arguments' => array(4, 5),
		'description' => 'Edit an image slider block settings',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_eatlas_image_slider_edit', 4),
		'access arguments' => array('access administration pages'),
		'file' => 'eatlas_image_slider.admin.inc'
	);

	// Delete an image slider block
	$items['admin/config/eatlas/eatlas_image_slider/%/delete'] = array(
		'title callback' => '_eatlas_image_slider_title',
		'title arguments' => array(4, 5),
		'description' => 'Delete an image slider block',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('_eatlas_image_slider_delete', 4),
		'access arguments' => array('access administration pages'),
		'file' => 'eatlas_image_slider.admin.inc'
	);

	return $items;
}

/**
 * Implements hook_entity_info_alter().
 * Add the view mode "eAtlas Image Slider".
 */
function eatlas_image_slider_entity_info_alter(&$entity_info) {
	$entity_info['node']['view modes']['eatlas_image_slider'] = array(
		'label' => t('eAtlas Image Slider'),
		'custom settings' => FALSE // Default: disabled
	);
}

/**
 * Implements: hook_block_info().
 */
function eatlas_image_slider_block_info() {
	$blocks = array();

	$blocks_info = eatlas_image_slider_block_load_all();

	foreach($blocks_info as $block_info) {
		$blocks['eatlas_image_slider_' . $block_info->bid] = array(
			'info' => t('eAtlas Image Slider') . ': ' . check_plain($block_info->name),
			'cache' => DRUPAL_NO_CACHE,
		);
	}

	return $blocks;
}

/**
 * Implements: hook_block_view().
 */
function eatlas_image_slider_block_view($delta = '') {
	$block = array();

	if (eatlas_commons_starts_with($delta, 'eatlas_image_slider_')) {
		$bid = intval(substr($delta, strlen('eatlas_image_slider_')));

		// Load eAtlas image slider info
		$block_info = eatlas_image_slider_block_load($bid);
		if ($block_info !== NULL) {

			// Load the view associated with the image slider
			// https://api.drupal.org/api/views/views.module/function/views_get_view/7
			$view = views_get_view($block_info->view);
			if ($view !== NULL) {
				// "node", "file_managed", etc.
				$type = $view->base_table;

				// Load the objects selected by the view
				// https://api.drupal.org/api/views/views.module/function/views_get_view_result/7
				$view_results = views_get_view_result($block_info->view);

				if ($view_results !== NULL) {
					$block['content'] = '<div class="eatlas-image-slider eatlas-image-slider_' . $bid . ' flexslider">' .
							'<ul class="slides">';

					switch ($type) {
						case 'node':
							foreach($view_results as $view_result) {
								// Load the node current node
								$node = node_load($view_result->nid);
								$node_view = node_view($node, 'eatlas_image_slider');
								$block['content'] .= '<li>' .
										drupal_render($node_view) .
										'</li>';
							}
							break;

						case 'file_managed':
							foreach($view_results as $view_result) {
								// TODO Render the file using special render type (TO DEFINE)
							}
							break;
					}

					$block['content'] .= '</ul></div>';
				}
			}
		}
	}

	return $block;
}

/**
 * API function
 */
function eatlas_image_slider_block_load($bid) {
	if ($bid === NULL) {
		return NULL;
	}

	// DB Select using the Drupal objects
	// https://api.drupal.org/api/drupal/includes!database!database.inc/function/db_select/7
	// NOTE: Join do not return a query!
	//     https://api.drupal.org/api/drupal/includes%21database%21select.inc/function/SelectQuery%3A%3Ajoin/7

	$query = db_select('eatlas_image_slider', 's')
		->fields('s')
		->condition('s.bid', $bid, '=');
	$result = $query->execute();

	return $result->fetch();
}

/**
 * API function
 */
function eatlas_image_slider_block_load_all() {
	$query = db_select('eatlas_image_slider', 's')
		->fields('s');
	$result = $query->execute();

	return $result->fetchAll();
}

/**
 * API function
 */
function eatlas_image_slider_block_save($block) {
	// Transform the branding object as an Array to be sent to the DB.
	$block_fields = (array)$block;

	if (isset($block_fields['bid'])) {
		// Edit
		$bid = $block_fields['bid'];

		// BID is used in the "WHERE" clause, not in the values.
		unset($block_fields['bid']);

		db_update('eatlas_image_slider')->fields($block_fields)->condition('bid', $bid)->execute();
	} else {
		// Create
		// https://api.drupal.org/api/drupal/includes%21database%21database.inc/function/db_insert/7
		db_insert('eatlas_image_slider')->fields($block_fields)->execute();
	}
}

/**
 * API function
 */
function eatlas_image_slider_block_delete($bid) {
	if ($bid !== NULL) {
		// https://api.drupal.org/api/drupal/includes%21database%21database.inc/function/db_delete/7

		// Delete the block
		db_delete('block')
			->condition('module', 'eatlas_image_slider')
			->condition('delta', 'eatlas_image_slider_' . $bid)
			->execute();

		// Delete the entry NcAnimate entry
		db_delete('eatlas_image_slider')->condition('bid', $bid)->execute();
	}
}

?>
